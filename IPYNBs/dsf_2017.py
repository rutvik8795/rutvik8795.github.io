# -*- coding: utf-8 -*-
"""dsf_2017.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sfILcxYbQ5Bn9NA0JAqS_xA4cTYdSgPA
"""

import pandas as pd
import pdb
import os
from google.colab import drive

from datetime import datetime
drive.mount('/content/drive')


#Read all files and merge into 1 ( All counties)

dataframes = []

counter = 0
total = len(os.listdir('/content/drive/My Drive/20170630/Voter_Detail/')) 
for filename in os.listdir('/content/drive/My Drive/20170630/Voter_Detail/'):
    if counter%10 == 0 :
      print("Processed {} of {} files".format(counter,total))
      print('\n')
    
    counter += 1
    if filename.endswith(".txt") or filename.endswith(".py"): 
        data = pd.read_csv('/content/drive/My Drive/20170630/Voter_Detail/'+filename, sep="\t", header=None,low_memory=False)
        
        data.columns = ["County Code","Voter ID","Name Last","Name Suffix","Name First","Name Middle","Requested public records exemption","Residence Address Line 1","Residence Address Line 2","Residence City (USPS)","Residence State","Residence Zipcode","Mailing Address Line 1","Mailing Address Line 2","Mailing Address Line 3","Mailing City","Mailing State","Mailing Zipcode	","Mailing Country","Gender","Race","Birth Date","Registration Date","Party Affiliation","Precinct","Precinct Group","Precinct Split","Precinct Suffix","Voter Status","Congressional District","House District","Senate District","County Commission District","School Board District","Daytime Area Code","Daytime Phone Number","Daytime Phone Extension","Email address"]

        data =  data.loc[:,["Name Last","Name First","Name Middle","Residence Address Line 1","Residence Address Line 2","Residence City (USPS)","Residence State","Residence Zipcode","Gender","Race","Birth Date","Registration Date","Party Affiliation"]]
        
        data = data.dropna(subset=["Name Last","Birth Date","Name First","Residence Address Line 1","Residence Address Line 2","Gender","Party Affiliation"])
        
        dataframes.append(data)

print("Processed {} of {} files".format(counter,total))
print('\n')

new_dataframe = pd.DataFrame()
temp_dataframe = pd.DataFrame()

#for i,df in enumerate(dataframes) :
temp_dataframe = pd.concat(dataframes)
temp_dataframe = temp_dataframe[temp_dataframe['Party Affiliation'].isin(['DEM', 'REP'])]
#print(temp_dataframe)

#pdb.set_trace()

#Add columns




#Filter out irrelevant columns


#Identify couples

#print (temp_dataframe.head(5))
pd.options.display.max_columns = None
#temp=temp_dataframe.sample(n=20000)
temp2 = temp_dataframe
#temp2=temp_dataframe
#print(temp.head(5))
#print(temp['Residence Address Line 2'].head(5))
temp2['All'] = temp2['Residence Address Line 1'].str.cat(temp2[['Residence Address Line 2']], sep=' - ')
#print(temp['All'].head(5))
df=temp2.groupby('All')
data=pd.DataFrame()

df1 = pd.DataFrame()
df2 = pd.DataFrame()

counter = 0
print(temp2.shape)
for name,group in df:

    if counter%30000 == 0 :
      print("Processed {} of items".format(counter) )
    counter += 1

    if group.shape[0]==2 and group[group.Gender == 'F'].shape[0] == 1 and group[group.Gender == 'M'].shape[0] == 1:
        group_name=group.groupby('Name Last')
        for name1,group1 in group_name:
            if group1.shape[0]==2:
                #print(name1)
                #print(group1)
                data=data.append([group])
                #pdb.set_trace()
                if (group1.iloc[0,12] == group1.iloc[1,12]) :
                  df1 = df1.append(group)
                else :
                  df2 = df2.append(group)

print("Processed {} of {} items".format(counter) )
print('Processing Complete')

print(data.shape)